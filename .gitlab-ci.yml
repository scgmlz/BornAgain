stages:
  - build

mac:
  tags:
  - MacOS
  stage: build
  script:
    - mkdir build
    - cd build
    - cmake .. -D CMAKE_PREFIX_PATH=/usr/local/opt/qt -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
    - make
    - ctest --output-on-failure
    # - cpack .
  artifacts:
#    paths:
#    - build/*zip
#    expire_in: 10 days

windows:
  tags:
  - Windows
  stage: build
  script:
    - set OPTLIBS=C:\opt\x64
    - New-Item -ItemType "directory" -Confirm:$false -Force:$true -Name "build"
    - $Env:Path
    - cd build
    - cmd.exe "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
    - cmake --version
    - cmake -G "Visual Studio 16 2019" -A x64 -T host=x64 -DLIB_MAN=OFF -DQTDIR=C:/Qt/5.14.1/msvc2017_64 -DCPACK_IFW_ROOT=C:\Qt\Tools\QtInstallerFramework\3.2 -DCMAKE_INCLUDE_PATH=%OPTLIBS%/include -DCMAKE_LIBRARY_PATH=%OPTLIBS%/lib -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -B. ..
    - cmake --build . --config Release
    - Get-Location
    - ctest -C Release --output-on-failure
    - cpack -C Release --verbose
  artifacts:
    paths:
    - build/*.exe
    - build/bin/Release/*.dll
    - build/bin/Release/*.exe
    expire_in: 1 week

native_Debian_clang:
  tags: &native
  - Debian
  before_script: &debian_clang
    - export CC=clang; export CXX=clang++
    - cmake --version
    - clang --version
  stage: build
  script: &native_scr
    - pwd
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_CXX_COMPILER_LAUNCHER=ccache #-DWERROR=ON
    - xvfb-run make -j6 # TODO rm mvvm tests, then rm xvfb-run
    - xvfb-run ctest -j6 --output-on-failure
