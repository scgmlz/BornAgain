// ************************************************************************** //
//
//  BornAgain: simulate and fit scattering at grazing incidence
//
//! @file      Samples/inc/BABuild.h
//! @brief     Defines functions for access build related info.
//!
//! @homepage  http://bornagainproject.org
//! @license   GNU General Public License v3 or higher (see COPYING)
//! @copyright Forschungszentrum JÃ¼lich GmbH 2015
//! @authors   Scientific Computing Group at MLZ Garching
//! @authors   C. Durniak, M. Ganeva, G. Pospelov, W. Van Herck, J. Wuttke
//
// ************************************************************************** //

#ifndef BABUILD_H
#define BABUILD_H

#include <string>

namespace BABuild
{

inline std::string cmakeBinaryDir() { return "@CMAKE_BINARY_DIR@"; }
inline std::string buildLibDir() { return "@CMAKE_BINARY_DIR@/lib"; }
inline std::string buildBinDir() { return "@CMAKE_BINARY_DIR@/bin"; }

//! Methods to access info about Python used during the build.

inline std::string pythonExecutable() { return "@Python3_EXECUTABLE@"; }
inline std::string pythonInterpreterID() { return "@Python3_INTERPRETER_ID@"; }
inline std::string pythonVersionString() { return "@Python3_VERSION@"; }
inline std::string pythonLibraries() { return "@Python3_LIBRARIES@"; }
inline std::string pythonStdLib() { return "@Python3_STDLIB@"; }
inline std::string pythonIncludeDirs() { return "@Python3_INCLUDE_DIRS@"; }
inline std::string numpyIncludeDir() { return "@Python3_NumPy_INCLUDE_DIRS@"; }
inline std::string numpyVersionString() { return "@Python3_NumPy_VERSION@"; }
inline std::string pythonSiteLib() { return "@Python3_SITELIB@"; }
}

#endif
